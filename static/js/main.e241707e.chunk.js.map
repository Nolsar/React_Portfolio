{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","Fragment","id","className","href","title","name","style","color","fontFamily","role","roleDescription","socialLinks","map","item","url","target","rel","Component","About","src","alt","aboutme","address","website","Resume","education","UniversityName","specialization","MonthOfPassing","YearOfPassing","Achievements","work","CompanyName","MonthOfLeaving","YearOfLeaving","skillsDescription","skills","skillname","toLowerCase","Porfolio","portfolio","textAlign","deployedapp","githuburl","imgurl","description","ContactUs","linkedinId","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e241707e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#hide-nav\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n             <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n               <li><a className=\"smoothscroll\" href=\"#testimonials\">Testimonials</a></li>\n               <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">{resumeData.name}</h1>\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>I am a {resumeData.role}.{resumeData.roleDescription}\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n               <img className=\"profile-pic\"  src=\"./images/profilepic.jpg\" alt=\"profile\" />\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n\n               <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t<span>{resumeData.name}</span>\n                     <br></br>\n       \t\t\t\t\t\t   <span>\n                     {resumeData.address}\n                    </span>\n                    <br></br>\n                    <span>\n                       <a href={resumeData.website}>\n                          Github\n                       </a>\n                    </span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default  class Resume extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"resume\">\n\n         <div className=\"row education\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Education</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.education && resumeData.education.map((item)=>{\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.UniversityName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfPassing} {item.YearOfPassing}</em></p>\n                          <p>\n                          {item.Achievements}\n                          </p>\n                       </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n         </div>\n        <div className=\"row work\">\n            <div className=\"three columns header-col\">\n               <h1><span>Work</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {\n                resumeData.work && resumeData.work.map((item) => {\n                  return(\n                    <div className=\"row item\">\n                       <div className=\"twelve columns\">\n                          <h3>{item.CompanyName}</h3>\n                          <p className=\"info\">\n                          {item.specialization}\n                          <span>&bull;</span> <em className=\"date\">{item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                          <p>\n                          {item.Achievements}\n                          </p>\n                       </div>\n\n                    </div>\n\n                  )\n                })\n              }\n            </div> \n         </div>\n\n\n         <div className=\"row skill\">\n\n            <div className=\"three columns header-col\">\n               <h1><span>Skills</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <p>\n               {resumeData.skillsDescription}\n               </p>\n\n   \t\t\t\t<div className=\"bars\">\n\n   \t\t\t\t   <ul className=\"skills\">\n                {\n                  resumeData.skills && resumeData.skills.map((item) => {\n                    return(\n                      <li>\n                      <span className={`bar-expand ${item.skillname.toLowerCase()}`}>\n                      </span><em>{item.skillname}</em>\n                      </li>\n                    )\n                  })\n                }\n\n   \t\t\t\t\t</ul>\n\n   \t\t\t\t</div>\n\n   \t\t\t</div>\n\n         </div>\n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Check Out Some of My Works.</h1>\n          <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n          {\n            resumeData.portfolio && resumeData.portfolio.map((item)=>{\n              return(\n                <div className=\"columns portfolio-item\">\n                  <h5 style={{textAlign:'center'}}>\n                    <a href={item.deployedapp}>{item.name}</a>\n                    </h5>\n                    <h6 style={{textAlign:'center'}}>\n                      <a href={item.githuburl}>\n                        Project Repository\n                      </a>\n                    </h6>\n                  <div className=\"item-wrap\">\n                    <a href=\"{#modal_01}\">\n                      <img src={`${item.imgurl}`} alt=\"project\" className=\"item-img\"/>\n                      <div className=\"overlay\">\n                        <div className=\"portfolio-item-meta\">\n                          <p>{item.description}</p>\n                          {/* <p>{item.deployedapp}</p> */}\n                          {/* <p><a href={item.githuburl}>\n                          Github Repository\n                          </a>\n                            </p> */}\n                        </div>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              )\n            })\n          }\n          </div>\n        </div>\n      </div>\n  </section>\n        );\n  }\n}","import React, { Component } from 'react';\n\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n        <div className=\"row section-head\">\n          <div className=\"ten columns\">\n            <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below.\n              </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <aside className=\"eigth columns footer-widgets\">\n            <div className=\"widget\">\n              <h4 style={{ textAlign: 'center' }}>\n                <p>LinkedIn: <a href={resumeData.linkedinId}> click here!</a></p>\n                <p>Email: s.nolan1128@rutgers.edu</p>\n              </h4>\n            </div>\n          </aside>\n        </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n    // \"imagebaseurl\":\"https://github.com/Nolsar/nolsar.github.io\",\n    \"name\": \"Sara A. Nolan\",\n    \"role\": \"Full-stack Developer\",\n    \"linkedinId\":\"https://www.linkedin.com/in/sara-n-940845161/\",\n    // \"skypeid\": \"Your skypeid\",\n    \"roleDescription\": \"I am a future full-stack web developer, with a bachelor's degree from Rutger's University in Business Administration and a concentration in Data Analytics. I enjoy working with various parts of frontend development, problem solving, and learning about new technologies. In my free time I enjoy the outdoors, reading, traveling and art.\",\n    \"socialLinks\":[\n        {\n          id: 1,\n          \"name\":\"linkedin\",\n          \"url\":\"https://www.linkedin.com/in/sara-n-940845161/\",\n          \"className\":\"fa fa-linkedin\"\n        },\n        {\n          id: 2,\n          \"name\":\"github\",\n          \"url\":\"https://github.com/Nolsar\",\n          \"className\":\"fa fa-github\"\n        },\n        // {\n        //   \"name\":\"skype\",\n        //   \"url\":\"http://twitter.com/rbhatia46\",\n        //   \"className\":\"fa fa-twitter\"\n        // }\n      ],\n    \"aboutme\":\"A future full-stack web developer, with a bachelor's degree from Rutgers University in Business Administration and a concentration in Data Analytics. Workign towards a career in front-end development. I believe that to be successful in life, one needs to go after their dreams and passions, and never stop pursuing them.\",\n    \"address\":\"New Jersey\",\n    \"website\":\"https://github.com/Nolsar\",\n    \"education\":[\n      {\n        id: 1,\n        \"UniversityName\":\"Rutgers University Business School\",\n        \"specialization\":\"Data Analytics\",\n        \"MonthOfPassing\":\"January\",\n        \"YearOfPassing\":\"2022\",\n        \"Achievements\":\"Dean's List\"\n      },\n      {\n        id: 2,\n        \"UniversityName\":\"Brookdale Community College\",\n        \"specialization\":\"Business Adminstration\",\n        \"MonthOfPassing\":\"May\",\n        \"YearOfPassing\":\"2018\",\n        // \"Achievements\":\"Some Achievements\"\n      }\n    ],\n    \"work\":[\n      {\n        id: 1,\n        \"CompanyName\":\"Banfield Pet Hospital\",\n        \"specialization\":\"Practice Manager, Shift Lead\",\n        \"MonthOfLeaving\":\"Current\",\n        // \"YearOfLeaving\":\"Current\",\n        // \"Achievements\":\"Some Achievements\"\n      },\n      // {\n      //   \"CompanyName\":\"Some Company\",\n      //   \"specialization\":\"Some specialization\",\n      //   \"MonthOfLeaving\":\"Jan\",\n      //   \"YearOfLeaving\":\"2018\",\n      //   \"Achievements\":\"Some Achievements\"\n      // }\n    ],\n    // \"skillsDescription\":\"Your skills here\",\n    \"skills\":[\n      {\n        \"skillname\":\"HTML5\"\n      },\n      {\n        \"skillname\":\"CSS\"\n      },\n      {\n        \"skillname\":\"NodeJS\"\n      },\n      {\n        \"skillname\":\"MySQL & R\"\n      },\n      {\n        \"skillname\":\"Reactjs\"\n      }\n    ],\n    \"portfolio\":[\n      {\n        id: 1,\n        \"name\":\"Extended Play\",\n        \"description\":\"Extended Play is a web application which utilizes several API's to call information regarding bands and concerts within a specified radius. Results populate bio, discography, image, and closest event or events. Once events are listed, another listing will show nearest bars to venue, effectively 'extending play' for your evening.\",\n        \"imgurl\":\"images/extended_play.jpg\",\n        // \"imgurl\":\"images/extended_play.jpg\",\n        \"deployedapp\": \"https://nolsar.github.io/extendedplay/\",\n        \"githuburl\": \"https://github.com/Nolsar/extendedplay\"\n      },\n      {\n        id: 2,\n        \"name\":\"Pet Speak Health\",\n        \"description\":\"Pet Speak Health (PSH) enables the storage of medical notes, history, and other relevant medical records specific to a pet and their owner. Pet Speak Health uses STT (Speech to Text) notation for when your hands are occupied caring for a per. Medical record transcription takes the pen out of your hands so you can focus on what is really important... caring for the animals! When activated, PSH records audio and will transcribe your notes and store them to a pet's unique file the server. The pet's records are unique to each client ie: owner. Medical records are accessible to the staff, as well as the owner.\",\n        \"imgurl\":\"images/pet_speak_health.jpg\",\n        \"deployedapp\": \"https://pet-speak-health.herokuapp.com/\",\n        \"githuburl\": \"https://github.com/Nolsar/Pet_Speak_Health\"\n      },\n      {\n        id: 3,\n        \"name\":\"Budget Tracker\",\n        \"description\":\"A PWA (progressive web application) that allows user to be able to add expenses and deposits to their budget with or without a connection. When entering transactions offline, they should populate the total when brought back online.\",  \n        \"imgurl\":\"images/budget_tracker.jpg\",\n        \"deployedapp\": \"https://shielded-wildwood-66211.herokuapp.com/\",\n        \"githuburl\": \"https://github.com/Nolsar/Online-Offline_Budget_Trackers\"\n      },\n      {\n        id: 4,\n        \"name\":\"Note Taker\",\n        \"description\":\"This is a simple Note Taker application that allows users to add, view saved notes and also delete the notes if the user don't need that note anymore. This application uses an express backend and save and retrieve note data from a JSON file.\",\n        \"imgurl\":\"images/note_taker.jpg\",\n        \"deployedapp\": \"https://nolsar-note-taker.herokuapp.com/\",\n        \"githuburl\": \"https://github.com/Nolsar/Note_Taker\"\n      }\n    ],\n    // \"testimonials\":[\n    //   {\n    //     \"description\":\"This is a sample testimonial\",\n    //     \"name\":\"Some technical guy\"\n    //   },\n    //   {\n    //     \"description\":\"This is a sample testimonial\",\n    //     \"name\":\"Some technical guy\"\n    //   }\n    // ]\n  }\n  \n  export default resumeData","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\n// import Testimonials from  './components/Testimonials';\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <Portfolio resumeData={resumeData}/>\n        {/* <Testimonials resumeData={resumeData}/> */}\n        <ContactUs resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}